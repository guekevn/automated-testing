{"name": "test_payment_QRIS", "status": "failed", "statusDetails": {"message": "Failed: terdapat error selama pengujian yaitu: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (/Users/kevin/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"faa67362-1672-4a2a-b7b2-5704aea7a5fb\")>\n\n    @pytest.mark.usefixtures('driver')\n    @pytest.mark.run(order=5)\n    # def test_payment_tunai(driver):\n    #     tunai = PaymentTunai(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran tunai')\n    #         tunai.click_menu_openpayment()\n    #         tunai.input_amount()\n    #         tunai.click_button_lanjutkan()\n    #         tunai.scroll_to_text('TUNAI')\n    #         tunai.button_bayar_payment()\n    #         tunai.button_confirm_payment_tunai()\n    #         tunai.button_bayar_tunai()\n    #         tunai.success_page()\n    #         tunai.reprint_struk()\n    #         tunai.button_back()\n    #         tunai.openpayment_page()\n    #         logging.info(\"Pembayaran tunai berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    # def test_payment_debit(driver):\n    #     debit = PaymentDebit(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran debit')\n    #         debit.click_menu_openpayment()\n    #         debit.input_amount()\n    #         debit.click_button_lanjutkan()\n    #         debit.scroll_to_text('DEBIT CARD')\n    #         debit.button_bayar_payment()\n    #         debit.button_confirm_payment_debit()\n    #         debit.insert_card_page()\n    #         debit.confirm_payment_debit()\n    #         debit.input_PIN_debit()\n    #         debit.success_page()\n    #         debit.reprint_struk()\n    #         debit.button_back()\n    #         debit.openpayment_page()\n    #         logging.info(\"Pembayaran debit berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    # def test_payment_credit(driver):\n    #     credit = PaymentCredit(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran credit')\n    #         credit.click_menu_openpayment()\n    #         credit.input_amount()\n    #         credit.click_button_lanjutkan()\n    #         credit.scroll_to_text(\"CREDIT CARD\")\n    #         credit.button_bayar_payment()\n    #         credit.button_confirm_payment_credit()\n    #         credit.insert_card_page()\n    #         credit.confirm_payment_credit()\n    #         credit.input_PIN_credit()\n    #         credit.success_page()\n    #         credit.reprint_struk()\n    #         credit.button_back()\n    #         credit.openpayment_page()\n    #         logging.info(\"Pembayaran credit berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    def test_payment_QRIS(driver):\n        QRIS = PaymentQRIS(driver)\n        try:\n            logging.info('Mulai pengujian pembayaran QRIS')\n            QRIS.click_menu_openpayment()\n            QRIS.input_amount()\n            QRIS.click_button_lanjutkan()\n            QRIS.swipe_by_coordinates(300, 1000, 350, 250)\n            QRIS.scroll_to_text(\"QRIS\")\n            QRIS.button_bayar_payment()\n            QRIS.button_confirm_payment_QRIS()\n            QRIS.wait_for_qrcode()\n>           QRIS.success_page()\n\nsrc/tests/test_openpayment.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.openpayment_page.PaymentQRIS object at 0x108f8df60>\n\n    def success_page(self):\n>       WebDriverWait(self.driver, 20).until(EC.presence_of_element_located((AppiumBy.ID, 'com.mkpmobile.retail.mitramint:id/action_bar_root')))\n\nsrc/pages/openpayment_page.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"faa67362-1672-4a2a-b7b2-5704aea7a5fb\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x108f7d870>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (/Users/kevin/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"faa67362-1672-4a2a-b7b2-5704aea7a5fb\")>\n\n    @pytest.mark.usefixtures('driver')\n    @pytest.mark.run(order=5)\n    # def test_payment_tunai(driver):\n    #     tunai = PaymentTunai(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran tunai')\n    #         tunai.click_menu_openpayment()\n    #         tunai.input_amount()\n    #         tunai.click_button_lanjutkan()\n    #         tunai.scroll_to_text('TUNAI')\n    #         tunai.button_bayar_payment()\n    #         tunai.button_confirm_payment_tunai()\n    #         tunai.button_bayar_tunai()\n    #         tunai.success_page()\n    #         tunai.reprint_struk()\n    #         tunai.button_back()\n    #         tunai.openpayment_page()\n    #         logging.info(\"Pembayaran tunai berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    # def test_payment_debit(driver):\n    #     debit = PaymentDebit(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran debit')\n    #         debit.click_menu_openpayment()\n    #         debit.input_amount()\n    #         debit.click_button_lanjutkan()\n    #         debit.scroll_to_text('DEBIT CARD')\n    #         debit.button_bayar_payment()\n    #         debit.button_confirm_payment_debit()\n    #         debit.insert_card_page()\n    #         debit.confirm_payment_debit()\n    #         debit.input_PIN_debit()\n    #         debit.success_page()\n    #         debit.reprint_struk()\n    #         debit.button_back()\n    #         debit.openpayment_page()\n    #         logging.info(\"Pembayaran debit berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    # def test_payment_credit(driver):\n    #     credit = PaymentCredit(driver)\n    #     try:\n    #         logging.info('Mulai pengujian pembayaran credit')\n    #         credit.click_menu_openpayment()\n    #         credit.input_amount()\n    #         credit.click_button_lanjutkan()\n    #         credit.scroll_to_text(\"CREDIT CARD\")\n    #         credit.button_bayar_payment()\n    #         credit.button_confirm_payment_credit()\n    #         credit.insert_card_page()\n    #         credit.confirm_payment_credit()\n    #         credit.input_PIN_credit()\n    #         credit.success_page()\n    #         credit.reprint_struk()\n    #         credit.button_back()\n    #         credit.openpayment_page()\n    #         logging.info(\"Pembayaran credit berhasil\")\n    #     except Exception as e :\n    #         logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n    #         pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\n    \n    def test_payment_QRIS(driver):\n        QRIS = PaymentQRIS(driver)\n        try:\n            logging.info('Mulai pengujian pembayaran QRIS')\n            QRIS.click_menu_openpayment()\n            QRIS.input_amount()\n            QRIS.click_button_lanjutkan()\n            QRIS.swipe_by_coordinates(300, 1000, 350, 250)\n            QRIS.scroll_to_text(\"QRIS\")\n            QRIS.button_bayar_payment()\n            QRIS.button_confirm_payment_QRIS()\n            QRIS.wait_for_qrcode()\n            QRIS.success_page()\n            QRIS.reprint_struk()\n            QRIS.button_back()\n            QRIS.openpayment_page()\n            logging.info(\"Pembayaran QRIS berhasil\")\n        except Exception as e :\n            logging.error(f'Terdapat error selama pengujian yaitu: {e}')\n>           pytest.fail(f'terdapat error selama pengujian yaitu: {e}')\nE           Failed: terdapat error selama pengujian yaitu: Message: \nE           Stacktrace:\nE           NoSuchElementError: An element could not be located on the page using the given search parameters.\nE               at AndroidUiautomator2Driver.findElOrEls (/Users/kevin/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\nE               at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE               at AndroidUiautomator2Driver.findElOrElsWithProcessing (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\nE               at AndroidUiautomator2Driver.findElement (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\n\nsrc/tests/test_openpayment.py:93: Failed"}, "attachments": [{"name": "log", "source": "b0a3cc3a-93aa-4811-96b1-820807d0e981-attachment.txt", "type": "text/plain"}], "start": 1730453599737, "stop": 1730453633267, "uuid": "1a7e9af1-6db5-498e-8890-7ed6671d4e95", "historyId": "d07f6f413a18bfe710d61a01744dd71e", "testCaseId": "6ddb9c087ac951e67b0c7feb7ee634ad", "fullName": "src.tests.test_openpayment#test_payment_QRIS", "labels": [{"name": "tag", "value": "run(order=5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "src.tests"}, {"name": "suite", "value": "test_openpayment"}, {"name": "host", "value": "macbooks-MacBook-Air.local"}, {"name": "thread", "value": "37518-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.test_openpayment"}]}